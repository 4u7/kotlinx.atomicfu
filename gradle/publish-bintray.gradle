/*
 * Copyright 2017-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license.
 */

// Configures publishing of Maven artifacts to Bintray

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

apply from: project.rootProject.file('gradle/maven-central.gradle')

// todo: figure out how we can check it in a generic way
def isMultiplatform = project.name == 'atomicfu'

// ------------- tasks

// workaround for tasks created by native plugin
if (!isMultiplatform) {
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from "src/main/kotlin"
    }

    // empty xxx-javadoc.jar
    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from "$buildDir/javadoc" // would not exist
    }
}

task stubSources(type: Jar) {
    classifier = 'sources'
}

task stubJavadoc(type: Jar) {
    classifier = 'javadoc'
}

afterEvaluate {
    publishing {
        repositories {
            maven { url = 'https://kotlin.bintray.com/kotlinx' }
        }
        publications.all {
            pom.withXml(configureMavenCentralMetadata)
        }

        if (!isMultiplatform) {
            publications {
                maven(MavenPublication) {
                    from components.java
                    artifact sourcesJar
                    artifact javadocJar

                    if (project.name.endsWith("-maven-plugin")) {
                        pom.packaging = 'maven-plugin'
                    }
                }
            }
        } else {
            afterEvaluate {
                kotlin.targets.forEach { target ->
                    def targetPublication = publications.findByName(target.name)
                    if (targetPublication != null) {
                        targetPublication.artifact stubJavadoc
                    }
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    override = true // for multi-platform Kotlin/Native publishing
    pkg {
        userOrg = 'kotlin'
        repo = 'kotlinx'
        name = 'kotlinx.atomicfu'
        version {
            name = project.version
            vcsTag = project.version
            released  = new Date()
        }
    }
}

// TODO :kludge this is required for K/N publishing
bintrayUpload.dependsOn publishToMavenLocal

// This is for easier debugging of bintray uploading problems
bintrayUpload.doFirst {
    publications = project.publishing.publications.findAll { !it.name.contains('-test') }.collect {
        println("Uploading artifact '$it.groupId:$it.artifactId:$it.version' from publication '$it.name'")
        it
    }
}