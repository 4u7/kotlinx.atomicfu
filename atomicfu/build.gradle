apply plugin: 'kotlin-platform-jvm'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    expectedBy project(":atomicfu-common")

    testCompile project(":atomicfu-transformer")
    testCompile "junit:junit:$junit_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

def classesPreAtomicFuDir = file("$buildDir/classes/kotlin/test")
def classesPostAtomicFuDir = file("$buildDir/classes-post-atomicfu/test")

task transformTestClasses(type: JavaExec, dependsOn: compileTestKotlin) {
    main = "kotlinx.atomicfu.transformer.AtomicFUTransformerKt"
    args = [classesPreAtomicFuDir, classesPostAtomicFuDir]
    classpath = sourceSets.test.runtimeClasspath
    inputs.dir(classesPreAtomicFuDir)
    outputs.dir(classesPostAtomicFuDir)
}

task transformedTest(type: Test, dependsOn: transformTestClasses) {
    classpath = files(configurations.testRuntime, classesPostAtomicFuDir)
    exclude '**/*LFTest.*'
}

tasks.withType(Test) {
    testLogging {
        showStandardStreams = true
        events "passed", "failed"
    }
}

test.dependsOn transformedTest

